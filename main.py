import logging
import random
import schedule
import time
import threading
import asyncio
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
from config import Config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)

print("üîß –ó–ê–ü–£–°–ö AI BOT")


class AIPosterBot:
    def __init__(self):
        print("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...")
        self.application = Application.builder().token(Config.BOT_TOKEN).build()
        print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ")
        self.auto_posting = False
        self.scheduler_thread = None

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        await update.message.reply_text(
            "ü§ñ AI Poster Bot –∑–∞–ø—É—â–µ–Ω!\n\n"
            "–ö–æ–º–∞–Ω–¥—ã:\n"
            "/post - –°–æ–∑–¥–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ—Å—Ç\n"
            "/start_auto - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ-–ø–æ—Å—Ç–∏–Ω–≥\n"
            "/stop_auto - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ-–ø–æ—Å—Ç–∏–Ω–≥\n"
            "/test - –¢–µ—Å—Ç–æ–≤–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–∞"
        )

    async def create_auto_post(self):
        """–°–æ–∑–¥–∞–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"""
        try:
            print("üîÑ –ê–≤—Ç–æ-–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–∞...")
            from ai_generator import AIContentGenerator

            theme = random.choice(Config.THEMES)
            print(f"–¢–µ–º–∞: {theme}")

            post_text = AIContentGenerator.generate_post_text(theme)
            print(f"–¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞: {post_text}")

            await self.application.bot.send_message(
                chat_id=Config.CHANNEL_ID, text=post_text
            )

            print(f"‚úÖ –ê–≤—Ç–æ-–ø–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ {time.strftime('%H:%M:%S')}")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ-–ø–æ—Å—Ç–∏–Ω–≥–∞: {e}")

    async def post(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        await update.message.reply_text("üîÑ –°–æ–∑–¥–∞—é –ø–æ—Å—Ç...")

        try:
            from ai_generator import AIContentGenerator

            theme = random.choice(Config.THEMES)
            print(f"–ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø–æ—Å—Ç –Ω–∞ —Ç–µ–º—É: {theme}")

            post_text = AIContentGenerator.generate_post_text(theme)
            print(f"–¢–µ–∫—Å—Ç –ø–æ—Å—Ç–∞: {post_text}")

            await self.application.bot.send_message(
                chat_id=Config.CHANNEL_ID, text=post_text
            )

            await update.message.reply_text("‚úÖ AI –ø–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    async def start_auto_posting(
        self, update: Update, context: ContextTypes.DEFAULT_TYPE
    ):
        """–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ—Å—Ç–∏–Ω–≥–∞"""
        if self.auto_posting:
            await update.message.reply_text("‚ö†Ô∏è –ê–≤—Ç–æ-–ø–æ—Å—Ç–∏–Ω–≥ —É–∂–µ –∑–∞–ø—É—â–µ–Ω!")
            return

        self.auto_posting = True

        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        def run_scheduler():
            asyncio.run(self._scheduler_loop())

        self.scheduler_thread = threading.Thread(target=run_scheduler, daemon=True)
        self.scheduler_thread.start()

        await update.message.reply_text(
            f"üöÄ –ê–≤—Ç–æ-–ø–æ—Å—Ç–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω!\n"
            f"üìÖ –ò–Ω—Ç–µ—Ä–≤–∞–ª: {Config.POST_INTERVAL} —á–∞—Å–æ–≤\n"
            f"‚è∞ –°–ª–µ–¥—É—é—â–∏–π –ø–æ—Å—Ç —á–µ—Ä–µ–∑ {Config.POST_INTERVAL} —á–∞—Å–æ–≤\n"
            f"üìä –ö–∞–Ω–∞–ª: {Config.CHANNEL_ID}"
        )

        print(f"‚úÖ –ê–≤—Ç–æ-–ø–æ—Å—Ç–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º {Config.POST_INTERVAL} —á–∞—Å–æ–≤")

    async def _scheduler_loop(self):
        """–¶–∏–∫–ª –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
        while self.auto_posting:
            await self.create_auto_post()
            await asyncio.sleep(Config.POST_INTERVAL * 3600)  # –ñ–¥–µ–º N —á–∞—Å–æ–≤

    async def stop_auto_posting(
        self, update: Update, context: ContextTypes.DEFAULT_TYPE
    ):
        """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ—Å—Ç–∏–Ω–≥–∞"""
        if not self.auto_posting:
            await update.message.reply_text("‚ö†Ô∏è –ê–≤—Ç–æ-–ø–æ—Å—Ç–∏–Ω–≥ –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω!")
            return

        self.auto_posting = False

        await update.message.reply_text("üõë –ê–≤—Ç–æ-–ø–æ—Å—Ç–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
        print("‚úÖ –ê–≤—Ç–æ-–ø–æ—Å—Ç–∏–Ω–≥ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    async def test(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        await update.message.reply_text("üß™ –¢–µ—Å—Ç–∏—Ä—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é...")

        try:
            from ai_generator import AIContentGenerator

            theme = random.choice(Config.THEMES)
            post_text = AIContentGenerator.generate_post_text(theme)

            await update.message.reply_text(f"üìù –¢–µ–º–∞: {theme}\n\n{post_text}")

        except Exception as e:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞: {e}")

    def setup_handlers(self):
        self.application.add_handler(CommandHandler("start", self.start))
        self.application.add_handler(CommandHandler("post", self.post))
        self.application.add_handler(
            CommandHandler("start_auto", self.start_auto_posting)
        )
        self.application.add_handler(
            CommandHandler("stop_auto", self.stop_auto_posting)
        )
        self.application.add_handler(CommandHandler("test", self.test))

    def run(self):
        print("=== –ó–ê–ü–£–°–ö –ë–û–¢–ê ===")
        print(f"–¢–æ–∫–µ–Ω: {Config.BOT_TOKEN[:10]}...")
        print(f"–ö–∞–Ω–∞–ª: {Config.CHANNEL_ID}")
        print(f"–ò–Ω—Ç–µ—Ä–≤–∞–ª –∞–≤—Ç–æ-–ø–æ—Å—Ç–∏–Ω–≥–∞: {Config.POST_INTERVAL} —á–∞—Å–æ–≤")

        self.setup_handlers()
        print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

        print("üîÑ –ó–∞–ø—É—Å–∫ polling...")
        print("üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        print("   /start - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")
        print("   /post - —Å–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç")
        print("   /start_auto - –∑–∞–ø—É—Å—Ç–∏—Ç—å –∞–≤—Ç–æ-–ø–æ—Å—Ç–∏–Ω–≥")
        print("   /stop_auto - –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ-–ø–æ—Å—Ç–∏–Ω–≥")
        print("   /test - —Ç–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏")
        print("‚èπÔ∏è  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        self.application.run_polling()


if __name__ == "__main__":
    print("üîß –¢–û–ß–ö–ê –í–•–û–î–ê")
    bot = AIPosterBot()
    bot.run()
