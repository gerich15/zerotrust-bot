import google.generativeai as genai
import random
from config import Config

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Gemini
genai.configure(api_key=Config.OPENAI_API_KEY)


class AIContentGenerator:
    @staticmethod
    def generate_post_text(theme=None):
        if not theme:
            theme = random.choice(Config.THEMES)

        # –†–∞–∑–Ω—ã–µ —Å—Ç–∏–ª–∏ –ø–æ—Å—Ç–æ–≤ –¥–ª—è –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏
        styles = [
            "–Ω–æ–≤–æ—Å—Ç–Ω–æ–π —Å—Ç–∏–ª—å —Å –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π",
            "–æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π —Å—Ç–∏–ª—å —Å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ —Å–æ–≤–µ—Ç–∞–º–∏",
            "–∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å —Å —Ä–∞–∑–±–æ—Ä–æ–º –∫–µ–π—Å–æ–≤",
            "—ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π —Å—Ç–∏–ª—å —Å –ø—Ä–æ–≥–Ω–æ–∑–∞–º–∏ –∏ —Ç—Ä–µ–Ω–¥–∞–º–∏",
            "–ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å —Å –ø–æ—à–∞–≥–æ–≤—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏",
        ]

        formats = [
            "–ø—Ä–æ–±–ª–µ–º–∞ ‚Üí —Ä–µ—à–µ–Ω–∏–µ ‚Üí —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
            "—Ñ–∞–∫—Ç—ã ‚Üí –∞–Ω–∞–ª–∏–∑ ‚Üí –≤—ã–≤–æ–¥—ã",
            "—Ç—Ä–µ–Ω–¥—ã ‚Üí –≤—ã–∑–æ–≤—ã ‚Üí –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏",
            "—É–≥—Ä–æ–∑—ã ‚Üí –∑–∞—â–∏—Ç–∞ ‚Üí –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞",
            "—Ç–µ–æ—Ä–∏—è ‚Üí –ø—Ä–∞–∫—Ç–∏–∫–∞ ‚Üí —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã",
        ]

        style = random.choice(styles)
        format_type = random.choice(formats)

        prompt = f"""
        –ù–∞–ø–∏—à–∏ –£–ù–ò–ö–ê–õ–¨–ù–´–ô –ø–æ—Å—Ç –¥–ª—è Telegram –∫–∞–Ω–∞–ª–∞ –æ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–∞ —Ç–µ–º—É "{theme}".
        
        –°–¢–ò–õ–¨: {style}
        –§–û–†–ú–ê–¢: {format_type}
        
        –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:
        - –ù–∞—á–Ω–∏ —Å —Ü–µ–ø–ª—è—é—â–µ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å —ç–º–æ–¥–∑–∏
        - 2-3 –∫–æ—Ä–æ—Ç–∫–∏—Ö –∞–±–∑–∞—Ü–∞ —Ä–∞–∑–Ω–æ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è
        - –î–æ–±–∞–≤—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏–ª–∏ –∫–µ–π—Å—ã
        - –í–∫–ª—é—á–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        - –ò—Å–ø–æ–ª—å–∑—É–π —Ä–∞–∑–Ω—ã–µ —ç–º–æ–¥–∑–∏ –≤ –∫–∞–∂–¥–æ–º –∞–±–∑–∞—Ü–µ
        - –ó–∞–∫–æ–Ω—á–∏ –≤–æ–ø—Ä–æ—Å–æ–º –∫ –∞—É–¥–∏—Ç–æ—Ä–∏–∏
        - –î–æ–±–∞–≤—å 3-5 —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ö–µ—à—Ç–µ–≥–æ–≤
        
        –°–¥–µ–ª–∞–π –∫–∞–∂–¥—ã–π –ø–æ—Å—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏ –ø–æ–ª–µ–∑–Ω—ã–º!
        """

        try:
            model = genai.GenerativeModel("gemini-pro")
            response = model.generate_content(
                prompt,
                generation_config=genai.types.GenerationConfig(
                    max_output_tokens=600,
                    temperature=0.9,  # –£–≤–µ–ª–∏—á–∏–ª–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –¥–ª—è –±–æ–ª—å—à–µ–π –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏
                    top_p=0.8,
                ),
            )

            return response.text

        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ Gemini API: {e}")
            return AIContentGenerator._get_fallback_post(theme)

    @staticmethod
    def _get_fallback_post(theme):
        """–†–µ–∑–µ—Ä–≤–Ω—ã–µ –ø–æ—Å—Ç—ã —Å –±–æ–ª—å—à–µ–π –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å—é"""
        fallbacks = [
            f"""üîê **{theme}: –ù–æ–≤—ã–µ –≤—ã–∑–æ–≤—ã 2024**

–° —Ä–∞–∑–≤–∏—Ç–∏–µ–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –ø–æ—è–≤–ª—è—é—Ç—Å—è –∏ –Ω–æ–≤—ã–µ —É–≥—Ä–æ–∑—ã. {theme} —Ç—Ä–µ–±—É–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–¥—Ö–æ–¥–æ–≤ –∫ –∑–∞—â–∏—Ç–µ.

üí° –ö–ª—é—á–µ–≤—ã–µ –∞—Å–ø–µ–∫—Ç—ã:
‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —É–≥—Ä–æ–∑ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏  
‚Ä¢ –û–±—É—á–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤

üöÄ –ö–∞–∫–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –¥–ª—è –∑–∞—â–∏—Ç—ã? –î–µ–ª–∏—Ç–µ—Å—å –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö!

#{theme.replace(" ", "")} #–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å #–ó–∞—â–∏—Ç–∞–î–∞–Ω–Ω—ã—Ö""",
            f"""üõ°Ô∏è **{theme}: –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏**

–í —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º —Ü–∏—Ñ—Ä–æ–≤–æ–º –º–∏—Ä–µ {theme.lower()} —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ–π. –†–∞—Å—Å–º–æ—Ç—Ä–∏–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∑–∞—â–∏—Ç—ã.

‚ö° –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã:
‚Ä¢ –ü—Ä–æ–∞–∫—Ç–∏–≤–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
‚Ä¢ Zero Trust –ø–æ–¥—Ö–æ–¥
‚Ä¢ AI-–∞—Å—Å–∏—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞—â–∏—Ç–∞

üí¨ –ö–∞–∫ –≤—ã —Ä–µ—à–∞–µ—Ç–µ –≤–æ–ø—Ä–æ—Å—ã {theme.lower()}? –ò–Ω—Ç–µ—Ä–µ—Å–µ–Ω –≤–∞—à –æ–ø—ã—Ç!

#{theme.replace(" ", "")} #Security #–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å""",
            f"""üíª **{theme}: –≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π –≤–∑–≥–ª—è–¥**

{theme} - –æ–¥–Ω–∞ –∏–∑ —Å–∞–º—ã—Ö –¥–∏–Ω–∞–º–∏—á–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π –ò–ë. –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –ø–æ—è–≤–ª—è—é—Ç—Å—è –Ω–æ–≤—ã–µ –≤–µ–∫—Ç–æ—Ä—ã –∞—Ç–∞–∫ –∏ –º–µ—Ç–æ–¥—ã –∑–∞—â–∏—Ç—ã.

üîí –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º
‚Ä¢ –ú–Ω–æ–≥–æ—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
‚Ä¢ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö

üìä –°—Ç–∞–ª–∫–∏–≤–∞–ª–∏—Å—å —Å {theme.lower()}? –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –æ–ø—ã—Ç–µ!

#{theme.replace(" ", "")} #InfoSec #–ö–∏–±–µ—Ä–∑–∞—â–∏—Ç–∞""",
        ]
        return random.choice(fallbacks)

    @staticmethod
    def generate_image(prompt):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        image_ids = random.sample(range(1000, 9999), 5)
        return f"https://picsum.photos/1024/1024?random={random.choice(image_ids)}"

    @staticmethod
    def generate_image_prompt(post_text):
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
        cyber_prompts = [
            "futuristic cybersecurity concept digital shield protecting data glowing blue security grid abstract technology background",
            "cyber security protection digital lock and firewall network security concept glowing particles dark background",
            "data encryption concept digital code flowing through secure tunnel abstract cybersecurity art modern design",
            "hacker protection digital defense system cyber attack prevention futuristic security technology neon lights",
            "zero trust architecture multiple verification layers digital authentication process abstract security concept",
            "phishing attack prevention digital fishing hook with lock cybersecurity metaphor glowing elements dark theme",
            "network security monitoring digital radar detecting threats cyber defense system futuristic interface",
        ]
        return random.choice(cyber_prompts)
